version: "3.8"

x-build: &dockerfile-dev-build
  context: .
  dockerfile: Dockerfile.dev

services:
  db:
    image: postgres:13.3-alpine
    user: postgres
    environment:
      POSTGRES_USER: boss_role
      POSTGRES_PASSWORD: boss_password
    ports:
      - "5432:5432"
  app-development:
    build: *dockerfile-dev-build
    volumes:
      - .:/app
    env_file:
      - .env.development
    ports:
      - "8000:8000"
    depends_on:
      - db
    command:
      [
          "./scripts/wait-for-it.sh",
          "db:5432",
          "-t",
          "120",
          "--",
          "./scripts/start-web-development.sh",
      ]
  tests:
    build: *dockerfile-dev-build
    volumes:
      - .:/app
    env_file:
      - .env.development
    depends_on:
      - db
    command:
      [
          "./scripts/wait-for-it.sh",
          "db:5432",
          "-t",
          "120",
          "--",        
          "./scripts/start-tests.sh",
      ]
  lint:
    build: *dockerfile-dev-build
    volumes:
      - .:/app
    command:
      [
          "./scripts/start-lint.sh",
      ]
  formatter:
    build: *dockerfile-dev-build
    volumes:
      - .:/app
    command:
      [
          "./scripts/start-formatter.sh",
      ]
  generate-migrations:
    build: *dockerfile-dev-build
    volumes:
      - .:/app
    env_file:
      - .env.development
    command:
      [
          "./scripts/generate-migrations.sh",
      ]
  apply-migrations:
    build: *dockerfile-dev-build
    volumes:
      - .:/app
    env_file:
      - .env.development
    depends_on:
      - db
    command:
      [
          "./scripts/wait-for-it.sh",
          "db:5432",
          "-t",
          "120",
          "--",
          "./scripts/apply-migrations.sh",
      ]
  sonarcloud:
    build: *dockerfile-dev-build
    volumes:
      - .:/app
    command:
      [
          "./scripts/start-sonarcloud.sh",
          "YOUR-SONAR-CLOUD-TOKEN",
          "YOUR-PROJECT-VERSION",
      ]
